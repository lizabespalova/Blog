const body = document.querySelector('#dynamicElementsContainer');

const elements = {
    item1: {
        width: '350px',
        height: '300px',
        backgroundImage: 'url("templates/images/screensaver.png")',
        backgroundSize: 'cover',
        backgroundPosition: 'center',
        title: 'Java',
        titleColor: '#ffffff',
        titleFontSize: '20px',
        titleBackground: 'rgba(0, 0, 0, 0.5)',
        titlePadding: '10px',
        titleTextAlign: 'center',
        link: 'pages/java.php',
        lessons: 10
    },
    item2: {
        width: '350px',
        height: '300px',
        backgroundImage: 'url("templates/images/screensaver.png")',
        backgroundSize: 'cover',
        backgroundPosition: 'center',
        title: 'Spring',
        titleColor: '#ffffff',
        titleFontSize: '20px',
        titleBackground: 'rgba(0, 0, 0, 0.5)',
        titlePadding: '10px',
        titleTextAlign: 'center',
        link: 'pages/spring.php',
        lessons: 10
    },
};

for (const key in elements) {
    if (elements.hasOwnProperty(key)) {
        const item = elements[key];

        const container = document.createElement('div');
        container.style.width = item.width;
        container.style.height = item.height;
        container.style.display = 'flex';
        container.style.flexDirection = 'column';
        container.style.justifyContent = 'flex-end';
        container.style.padding = '10px';
        container.style.backgroundColor = item.titleBackground;
        container.style.transition = 'transform 0.3s, box-shadow 0.3s';
        container.style.position = 'relative';

        // –°–æ–∑–¥–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        const title = document.createElement('div');
        title.textContent = item.title;
        title.style.color = item.titleColor;
        title.style.fontSize = item.titleFontSize;
        title.style.textAlign = item.titleTextAlign;
        title.style.padding = item.titlePadding;
        title.style.marginBottom = '10px';

        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –æ–±—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        container.appendChild(title);

        // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        const card = document.createElement('div');
        card.style.width = '100%';
        card.style.height = '100%';
        card.style.backgroundImage = item.backgroundImage;
        card.style.backgroundSize = item.backgroundSize;
        card.style.backgroundPosition = item.backgroundPosition;
        card.style.marginBottom = '10px';
        container.appendChild(card);

        const infoContainer = document.createElement('div');
        infoContainer.style.width = '100%';
        infoContainer.style.backgroundColor = 'rgba(0, 0, 0, 0.7)';
        infoContainer.style.color = '#ffffff';
        infoContainer.style.padding = '5px 10px';
        infoContainer.style.boxSizing = 'border-box';
        infoContainer.style.textAlign = 'center';
        infoContainer.style.display = 'flex';
        infoContainer.style.justifyContent = 'space-between';

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —É—Ä–æ–∫–æ–≤
        const lessonsInfo = document.createElement('span');
        lessonsInfo.textContent = `Lessons: ${item.lessons}`;
        infoContainer.appendChild(lessonsInfo);

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∑–∞—Ö–æ–¥–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (–≤ –≤–∏–¥–µ –≥–ª–∞–∑–∞)
        const viewsInfo = document.createElement('span');
        viewsInfo.textContent = `Views: Loading...`;

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø–æ —Å—Å—ã–ª–∫–µ
        function fetchViewsCount(link, viewsElement) {
            fetch(`/api/views.php?link=${encodeURIComponent(link)}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.error) {
                        viewsElement.textContent = `Views: N/A`;
                        console.error('Error fetching views count:', data.error);
                    } else {
                        viewsElement.textContent = `Views: ${data.views} üëÅÔ∏è`;
                        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
                        item.views = data.views;
                    }
                })
                .catch(error => {
                    console.error('Error fetching views count:', error);
                    viewsElement.textContent = `Views: N/A`;
                });
        }

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
        fetchViewsCount(item.link, viewsInfo);
        infoContainer.appendChild(viewsInfo);

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫—É
        container.addEventListener('click', function(event) {
            event.preventDefault(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

            console.log(`Fetching views for link: ${item.link}`);

            // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤
            fetch(`/api/update_views.php?link=${encodeURIComponent(item.link)}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.status === 'success') {
                        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤ –Ω–∞ UI
                        item.views++;
                        viewsInfo.textContent = `Views: ${item.views} üëÅÔ∏è`;
                    } else {
                        console.error('Error updating views count:', data.error);
                    }
                    window.location.href = item.link; // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–∏ –∫–ª–∏–∫–µ
                })
                .catch(error => {
                    console.error('Error updating views count:', error);
                    window.location.href = item.link; // –í—Å–µ —Ä–∞–≤–Ω–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
                });
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –≤ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        container.appendChild(infoContainer);

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è hover —ç—Ñ—Ñ–µ–∫—Ç–∞ (—Ç–µ–Ω—å –ø—Ä–∏ –ø–æ–¥–Ω—è—Ç–∏–∏)
        container.addEventListener('mouseenter', function() {
            container.style.transform = 'translateY(-5px)';
            container.style.boxShadow = '0px 5px 15px rgba(0,0,0,0.3)';
        });

        container.addEventListener('mouseleave', function() {
            container.style.transform = 'translateY(0)';
            container.style.boxShadow = 'none';
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ —Ç–µ–ª–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        body.appendChild(container);
    }
}
